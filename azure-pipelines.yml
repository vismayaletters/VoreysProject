# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  batch: "true"
  branches:
    include:
      - master
      - dev
  paths:
    exclude:
      - README.md
      - azure-pipelines.yml
pr:
  autoCancel: "true"
  branches:
    include:
      - master
      - dev
  paths:
    exclude:
      - README.md
jobs:
- job: Deploy
  variables:
  - ${{ if eq(variables['build.SourceBranchName'], 'dev') }}:
    - group: sfdx-org-dev
    - name: MyVar
      value:  ' `echo "$(Build.SourceVersionMessage)" | head -c 5`'
    - name: TaskId
      value:  ' `echo "$(Build.SourceVersionMessage)" | head -n1 | cut -d " " -f1`'
  - ${{ if eq(variables['build.SourceBranchName'], 'master') }}:
    - group: sfdx-org-master
    - name: MyVar
      value:  ' `echo "$(Build.SourceVersionMessage)" | head -c 5`'
    - name: TaskId
      value:  ' `echo "$(Build.SourceVersionMessage)" | head -n1 | cut -d " " -f1`'
  steps:
    - script: echo $(SalesforceUserName)
    - script: echo $(InstanceUrl)
    - script: echo $(Clientid)
    - script: echo $(Build.SourceVersionMessage)
    - script: echo $(MyVar)
    - script: echo $(TaskId)
    - script: echo "##vso[task.setvariable variable=firstWord]$`echo "$(Build.SourceVersionMessage)" | head -n1 | cut -d " " -f1`"
    - task: UseNode@1
    - bash: 
        echo "##vso[task.setvariable variable=firstWord]$`echo "$(Build.SourceVersionMessage)" | head -n1 | cut -d " " -f1`"
    - bash: 
        echo $(firstWord)