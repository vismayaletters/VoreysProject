# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  batch: "true"
  branches:
    include:
      - master
      - dev
  paths:
    exclude:
      - README.md
      - azure-pipelines.yml
pr:
  autoCancel: "true"
  branches:
    include:
      - master
      - dev
  paths:
    exclude:
      - README.md
jobs:
- job: Deploy
  variables:
  - ${{ if eq(variables['build.SourceBranchName'], 'dev') }}:
    - group: sfdx-org-dev
    - name: MyVar
      value:  ' `echo "$(Build.SourceVersionMessage)" | head -c 3`'
  - ${{ if eq(variables['build.SourceBranchName'], 'master') }}:
    - group: sfdx-org-master
    - name: MyVar
      value:  ' `echo "$(Build.SourceVersionMessage)" | head -c 3`'
  steps:
    - script: echo $(SalesforceUserName)
    - script: echo $(InstanceUrl)
    - script: echo $(Clientid)
    - script: echo $(Build.SourceVersionMessage)
    - script: echo $(MyVar)
    - task: UseNode@1
    - bash: 
        npm install sfdx-cli --global
      displayName: Install Salesforce CLI
    - bash: 
        sfdx force:auth:jwt:grant --clientid $(Clientid) --jwtkeyfile ./buildfiles/server.key --username $(SalesforceUserName) --instanceurl $(InstanceUrl) -a prod
      displayName: Authorize salesforce org
    - bash: 
        sfdx force:source:convert -r ./force-app -d ./toDeploy
      displayName: Convert to deploy source
    - bash: 
        sfdx force:mdapi:deploy -l RunLocalTests -c -d ./toDeploy -u prod -w 10
      displayName: Run validation on source code
    - bash: 
        sfdx force:mdapi:deploy -l RunLocalTests -d ./toDeploy -u prod -w 10
      displayName: Deploy source code to Production
    - script: 
        curl -u vismayaletters@gmail.com:88R580KBf7FZDVmvjmnn344D -X PUT --data '{"update":{"comment":[{"add":{"body":{"type":"doc","version":1,"content":[{"type":"paragraph","content":[{"text":"Status Updated to Done","type":"text"}]}]}}} ]} }' -H "Content-Type:application/json" https://vismayaletters.atlassian.net/rest/api/3/issue/VOR-3
        echo "Curl is running"
      condition: eq('$(MyVar)', 'EC3')

